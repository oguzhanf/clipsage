<metro:MetroWindow x:Class="ClipSage.App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClipSage.App"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Title="ClipSage - Advanced Clipboard Manager"
        Height="600" Width="1000"
        MinHeight="400" MinWidth="600"
        GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
        WindowStartupLocation="CenterScreen"
        SaveWindowPosition="True">

    <metro:MetroWindow.Resources>
        <Style x:Key="ActionButton" TargetType="Button">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#BDBDBD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Context menu for tray icon -->
        <ContextMenu x:Key="TrayMenu">
            <MenuItem Header="Show Window" Click="ShowWindow_Click"/>
            <MenuItem Header="Settings..." Click="Settings_Click"/>
            <Separator/>
            <MenuItem Header="Exit" Click="Exit_Click"/>
        </ContextMenu>
    </metro:MetroWindow.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Menu -->
        <Menu Grid.Row="0" Background="Transparent">
            <MenuItem Header="_File">
                <MenuItem Header="_Settings..." Click="Settings_Click" />
                <Separator />
                <MenuItem Header="E_xit" Click="Exit_Click" />
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About" Click="About_Click" />
                <MenuItem Header="_Check for Updates" Click="CheckForUpdates_Click" />
            </MenuItem>
        </Menu>

        <!-- Header -->
        <TextBlock Grid.Row="1" Text="ClipSage" FontSize="24" FontWeight="Bold" Margin="0,10,0,10" Foreground="{DynamicResource MahApps.Brushes.Accent}" />

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>

            <!-- Left Column: ListView and Search Box -->
            <DockPanel Grid.Column="0" Margin="0,0,10,5">
                <TextBlock DockPanel.Dock="Top" Text="Clipboard History" FontSize="16" FontWeight="SemiBold" Margin="0,0,0,5" />
                <Border DockPanel.Dock="Top" BorderBrush="#E0E0E0" BorderThickness="1" CornerRadius="4" Margin="0,0,0,5">
                    <Grid>
                        <TextBox x:Name="SearchBox" Padding="5" BorderThickness="0" Background="Transparent"
                                 Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Text="Search..." Margin="5,0,0,0" VerticalAlignment="Center" Foreground="Gray"
                                   Visibility="{Binding SearchText, Converter={StaticResource StringToVisibilityConverter}}" />
                    </Grid>
                </Border>

                <!-- Filter Toolbar -->
                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="Filter:" VerticalAlignment="Center" Margin="0,0,5,0" />
                    <Button x:Name="AllFilterButton" Width="32" Height="32" Margin="2" Click="AllFilterButton_Click"
                            ToolTip="Show all items" Background="#E0E0E0">
                        <TextBlock Text="All" FontWeight="Bold" />
                    </Button>
                    <Button x:Name="TextFilterButton" Width="32" Height="32" Margin="2" Click="TextFilterButton_Click"
                            ToolTip="Show only text items" Background="#2196F3">
                        <TextBlock Text="📄" Foreground="White" />
                    </Button>
                    <Button x:Name="ImageFilterButton" Width="32" Height="32" Margin="2" Click="ImageFilterButton_Click"
                            ToolTip="Show only image items" Background="#4CAF50">
                        <TextBlock Text="🖼️" Foreground="White" />
                    </Button>
                    <Button x:Name="FileFilterButton" Width="32" Height="32" Margin="2" Click="FileFilterButton_Click"
                            ToolTip="Show only file items" Background="#9E9E9E">
                        <TextBlock Text="📁" Foreground="White" />
                    </Button>
                </StackPanel>

                <ListView x:Name="ClipboardList" DockPanel.Dock="Bottom"
                          ItemsSource="{Binding ClipboardEntries}"
                          SelectedItem="{Binding SelectedEntry}"
                          BorderThickness="1" BorderBrush="#E0E0E0"
                          Background="White"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          VirtualizingPanel.ScrollUnit="Pixel">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" Margin="0,0,10,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <!-- Icon -->
                                    <Border Grid.Row="0" Width="32" Height="32" Margin="0,0,0,2"
                                            Background="{Binding DataType, Converter={StaticResource DataTypeToColorConverter}}"
                                            CornerRadius="16">
                                        <TextBlock Text="{Binding DataType, Converter={StaticResource DataTypeToIconConverter}}"
                                                   Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   FontSize="16" />
                                    </Border>

                                    <!-- Label -->
                                    <Border Grid.Row="1" Background="#E0E0E0" CornerRadius="2"
                                            HorizontalAlignment="Center" Padding="4,1">
                                        <TextBlock Text="{Binding DataType, Converter={StaticResource DataTypeToLabelConverter}}"
                                                   Foreground="#424242" FontSize="8" FontWeight="Bold"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </Grid>
                                <StackPanel Grid.Column="1">
                                    <TextBlock Text="{Binding DisplayText}" TextTrimming="CharacterEllipsis" />
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Timestamp, StringFormat='{}{0:g}'}" FontSize="10" Foreground="Gray" />
                                        <TextBlock Text=" | " FontSize="10" Foreground="Gray" Visibility="{Binding ComputerName, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Inverse}" />
                                        <TextBlock Text="{Binding ComputerName}" FontSize="10" Foreground="Gray" Visibility="{Binding ComputerName, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Inverse}" />
                                    </StackPanel>
                                </StackPanel>
                                <Grid.ToolTip>
                                    <ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="{Binding DisplayText}" FontWeight="Bold" />
                                            <TextBlock Text="{Binding Timestamp, StringFormat='Time: {0:g}'}" />
                                            <TextBlock Text="{Binding ComputerName, StringFormat='Computer: {0}'}" Visibility="{Binding ComputerName, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Inverse}" />
                                            <TextBlock Text="{Binding SourceFile, StringFormat='Source: {0}'}" Visibility="{Binding SourceFile, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Inverse}" />
                                        </StackPanel>
                                    </ToolTip>
                                </Grid.ToolTip>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Padding" Value="5,10" />
                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                            <Setter Property="BorderBrush" Value="#E0E0E0" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </DockPanel>

            <!-- Right Column: Preview Pane and Action Buttons -->
            <DockPanel Grid.Column="1" Margin="0,0,0,5">
                <TextBlock DockPanel.Dock="Top" Text="Preview" FontSize="16" FontWeight="SemiBold" Margin="0,0,0,5" />

                <!-- Action Buttons -->
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                    <Button Content="Copy" Style="{StaticResource ActionButton}" Click="CopyButton_Click"
                            IsEnabled="{Binding SelectedEntry, Converter={StaticResource NullToBooleanConverter}}" />
                    <Button Content="Pin" Style="{StaticResource ActionButton}" Click="PinButton_Click"
                            IsEnabled="{Binding SelectedEntry, Converter={StaticResource NullToBooleanConverter}}" />
                    <Button Content="Delete" Style="{StaticResource ActionButton}" Click="DeleteButton_Click"
                            IsEnabled="{Binding SelectedEntry, Converter={StaticResource NullToBooleanConverter}}"
                            Background="#F44336" />
                </StackPanel>

                <!-- Preview Content -->
                <Border BorderBrush="#E0E0E0" BorderThickness="1" Background="White" CornerRadius="4">
                    <ContentControl x:Name="PreviewPane" Margin="10">
                        <ContentControl.Resources>
                            <DataTemplate x:Key="TextPreviewTemplate">
                                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                    <TextBox Text="{Binding PlainText, Mode=OneWay}"
                                             IsReadOnly="True"
                                             TextWrapping="Wrap"
                                             BorderThickness="0"
                                             Background="Transparent" />
                                </ScrollViewer>
                            </DataTemplate>
                            <DataTemplate x:Key="ImagePreviewTemplate">
                                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                    <Image Source="{Binding ImageSource}"
                                           Stretch="Uniform"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center" />
                                </ScrollViewer>
                            </DataTemplate>
                            <DataTemplate x:Key="EmptyPreviewTemplate">
                                <TextBlock Text="Select an item to preview"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Foreground="Gray" />
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </Border>
            </DockPanel>
        </Grid>

        <!-- Status Bar -->
        <StatusBar Grid.Row="3" Height="30">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <!-- Monitoring Status Text -->
            <StatusBarItem Grid.Column="0">
                <TextBlock Text="{Binding MonitoringStatusText}" Margin="0,0,10,0" />
            </StatusBarItem>

            <!-- Event Status Text -->
            <StatusBarItem Grid.Column="1">
                <TextBlock Text="{Binding EventStatusText}" Margin="0,0,10,0" FontWeight="SemiBold" />
            </StatusBarItem>

            <!-- Update Status Text -->
            <StatusBarItem Grid.Column="2">
                <TextBlock Text="{Binding UpdateStatusText}" />
            </StatusBarItem>

            <!-- Version Text -->
            <StatusBarItem Grid.Column="3">
                <TextBlock x:Name="VersionText" Margin="0,0,10,0" Foreground="Gray" />
            </StatusBarItem>

            <!-- Monitoring Toggle Button -->
            <StatusBarItem Grid.Column="4">
                <ToggleButton x:Name="MonitoringToggle"
                              IsChecked="{Binding IsMonitoring, Mode=OneWay}"
                              Click="MonitoringToggle_Click"
                              Content="{Binding IsMonitoring, Converter={StaticResource BooleanToMonitoringTextConverter}}"
                              Width="120"
                              Padding="10,3" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</metro:MetroWindow>
